# i3 config file (v4)

# Set background
exec_always --no-startup-id "sh ~/.fehbg &"

# Hide curser when incactive
exec unclutter &

# Compton window compositor
exec "/usr/bin/compton -b --config ~/.compton &"
exec --no-startup-id nm-applet
exec "/usr/bin/emacs --daemon &"

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
font pango:Inconsolata, fontawesome 15px

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec "j4-dmenu-desktop"
# bindsym $mod+d exec --no-startup-id "launchy"
# It's dmenu2
bindsym $mod+d exec "dmenu_run -i -o 0.9 -dim 0.15 -l 10 -fn 'Source Code Pro-10:normal'"

# change focus
bindsym $mod+k focus left
bindsym $mod+j focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+i focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+t layout toggle

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle


#          
# http://fortawesome.github.io/Font-Awesome/cheatsheet/

# switch to workspace
bindsym $mod+1 workspace 1: 
bindsym F1 workspace 1: 
bindsym $mod+2 workspace 2: 
bindsym F2 workspace 2: 
bindsym $mod+3 workspace 3: 
bindsym F3 workspace 3: 
bindsym $mod+4 workspace 4: 
bindsym F4 workspace 4: 
bindsym $mod+5 workspace 5: 
bindsym F5 workspace 5: 
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1: 
bindsym $mod+Shift+2 move container to workspace 2: 
bindsym $mod+Shift+3 move container to workspace 3: 
bindsym $mod+Shift+4 move container to workspace 4: 
bindsym $mod+Shift+5 move container to workspace 5: 
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# Assignments
assign [class="Vlc"] → 4: 
assign [class="Spotify"] → 4: 
assign [class="OSD Lyrics"] → 4: 
assign [class="Firefox"] → 2: 
# assign [class="Emacs"] → 4: 
assign [class="Pidgin"] → 5: 
assign [class="Thunderbird"] → 3: 
for_window [class="Osdlyrics"] floating enable
for_window [class="Thunar"] floating enable

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

bindsym $mod+h workspace prev
bindsym $mod+l workspace next

bindsym $mod+shift+h move container to prev
bindsym $mod+shift+l move container to next

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"
bindsym $mod+Return [urgent=latest] focus
bindsym $mod+m move scratchpad
bindsym $mod+o scratchpad show
bindsym F12 scratchpad show

# Search between windows
bindsym $mod+z exec python ~/src/i3-wm-scripts/nextfind.py

# Rename a workspace
bindsym $mod+n exec i3-input -F 'rename workspace to "%s"' -P 'New name: '

# Search in workspaces
# bindsym $mod+w exec quickswitch.py -w
bindsym $mod+w exec "~/src/i3_benkaiser_script/get_workspace_options.py | dmenu -i -o 0.9 -dim 0.15 -l 10 -fn 'Source Code Pro-10:normal'| ~/src/i3_benkaiser_script/go_to_workspace.py"
bindsym $mod+Shift+w exec "~/src/i3_benkaiser_script/get_workspace_options.py | dmenu -i -o 0.9 -dim 0.15 -l 10 -fn 'Source Code Pro-10:normal'| ~/src/i3_benkaiser_script/move_to_workspace.py"

# Search in home
bindsym $mod+a exec "find . ./BIHE/Pre-Master/2 \( ! -regex '.*/\..*' \) -maxdepth 1| dmenu -i -o 0.9 -dim 0.15 -l 10 -fn 'Source Code Pro-10:normal'| xargs -I{} fm '{}'"

# Send workspace to othe monitor
bindsym $mod+shift+o move workspace to output right

# Toggle bar visibility
bindsym $mod+b bar mode toggle
# starting a specially named term automatically
exec --no-startup-id urxvt -name scratchpad -e bash -c "tmux -q has-session && exec tmux attach-session -d || exec tmux new-session -n$USER -s$USER@$HOSTNAME"
# move this to scratchpad, if active
for_window [class="URxvt" instance="scratchpad"] move scratchpad
bindsym mod4+c [class="URxvt"] scratchpad show
bindsym mod4+x [class="Emacs"] scratchpad show

# Multimedia keys
bindsym XF86AudioRaiseVolume exec "amixer -D pulse sset Master '3%+'"
bindsym XF86AudioLowerVolume exec "amixer -D pulse sset Master '5%-'"
bindsym XF86AudioMute exec "amixer -D pulse set Master toggle"

# Some Options
hide_edge_borders both
new_window pixel 0
new_float pixel 2
workspace_layout tabbed
focus_follows_mouse no
force_focus_wrapping yes
workspace_auto_back_and_forth yes


bar {
        mode hide
        status_command i3status
        position bottom
        hidden_state hide
}


# I want my Pidgin in the right half, and chat windows in the left half, stacked
# I go to my pidgin mode, fire Pidgin, and type p i d
mode "pidgin" {
    # bindsym p exec i3-sensible-terminal --title "pidgin-terminal"
    bindsym i layout stacking
    bindsym d [class="Pidgin"] focus, move right, mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym    Tab mode "default"
}
for_window [instance="Pidgin"] move left, move left
for_window [title="pidgin-terminal"] move left

bindsym $mod+p mode "pidgin"
